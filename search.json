[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "aws.html",
    "href": "aws.html",
    "title": "aws",
    "section": "",
    "text": "About this aws backend: lambdas, dynamodb, appsync and websockets …"
  },
  {
    "objectID": "emotions.html",
    "href": "emotions.html",
    "title": "Emotions",
    "section": "",
    "text": "About emotions and planets .."
  },
  {
    "objectID": "engines.html",
    "href": "engines.html",
    "title": "Engines",
    "section": "",
    "text": "About emotiony.io engines …"
  },
  {
    "objectID": "howtocommit.html",
    "href": "howtocommit.html",
    "title": "",
    "section": "",
    "text": "feat – a new feature is introduced with the changes\nfix – a bug fix has occurred\nchore – changes that do not relate to a fix or feature and don’t modify source or test files (for example updating dependencies)\nrefactor – refactored code that neither fixes a bug nor adds a feature\ndocs – updates to documentation such as a the README or other markdown files\nstyle – changes that do not affect the meaning of the code, likely related to code formatting such as white-space, missing semi-colons, and so on.\ntest – including new or correcting previous tests\nperf – performance improvements\nci – continuous integration related\nbuild – changes that affect the build system or external dependencies\nrevert – reverts a previous commit\n\n\n\n\nAnswer this questions in a DIRECT, CLEAR style, no more than 60 words. No ending in POINT, “.”\n\n\n\n\nBREAKING CHANGE: a commit that has a BREAKING CHANGE:, or appends a ! after the type/scope, introduces a breaking API change (correlating with MAJOR in Semantic Versioning). A BREAKING CHANGE can be part of commits of any type.\n\n\n\n\nurl: https://commitizen-tools.github.io/commitizen\nurl: https://www.conventionalcommits.org/en/v1.0.0/\ntitle: \"Conventional Commits\"\ndescription: \"A specification for adding human and machine readable meaning to commit messages\"\nhost: www.conventionalcommits.org\nurl: https://semver.org/\ntitle: \"Semantic Versioning 2.0.0\"\ndescription: \"Semantic Versioning spec and website\"\nhost: semver.org"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\nimport React, { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}"
  },
  {
    "objectID": "planets.html",
    "href": "planets.html",
    "title": "Planets",
    "section": "",
    "text": "About this Planets …"
  },
  {
    "objectID": "react.html",
    "href": "react.html",
    "title": "react",
    "section": "",
    "text": "About front-end React"
  },
  {
    "objectID": "solidity.html",
    "href": "solidity.html",
    "title": "Solidity",
    "section": "",
    "text": "About Crypto and Solidity"
  },
  {
    "objectID": "solidity.html#github-code-management",
    "href": "solidity.html#github-code-management",
    "title": "Solidity",
    "section": "GitHub code management",
    "text": "GitHub code management\n\nGitHub production read.me\nREAD.ME GitHub production"
  },
  {
    "objectID": "solidity.html#components-definition",
    "href": "solidity.html#components-definition",
    "title": "Solidity",
    "section": "Components Definition",
    "text": "Components Definition\n\nUsed along emotiony.io\n[[react component definition]]"
  },
  {
    "objectID": "solidity.html#folder-and-components-tree-map",
    "href": "solidity.html#folder-and-components-tree-map",
    "title": "Solidity",
    "section": "Folder and components tree map",
    "text": "Folder and components tree map\n[[Pasted image 20221125152559.png|275]]\n\nTree folder:\n[[App React Map Summary]]\n\n\nComponents\n[[App React Components Summary]]\n\n\nPages\n[[App React Pages Summary]]"
  },
  {
    "objectID": "solidity.html#use-cases-and-ui-basic-kit",
    "href": "solidity.html#use-cases-and-ui-basic-kit",
    "title": "Solidity",
    "section": "Use cases and UI basic kit",
    "text": "Use cases and UI basic kit\nemotiony UI basic kit and use cases"
  },
  {
    "objectID": "solidity.html#wire-frames",
    "href": "solidity.html#wire-frames",
    "title": "Solidity",
    "section": "Wire-frames",
    "text": "Wire-frames\n\nDrafts\n[[emotiony-wireframe drafts]]\n\n\nHigh-fidelity\nemotiony-wireframe high-fidelity\n\n\nLow-fidelity\n[[emotiony-wireframe low-fidelity]]\n[[Wireframe-lf3.001.png|600]]"
  }
]